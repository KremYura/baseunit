name: API Build
# change 15
on:
  push:
    paths:
      - packages/**
      - .github/workflows/api-build.yml
    branches:
      - master

  pull_request:
    types: [opened, reopened, synchronize]
    paths:
      - packages/**
      - .github/workflows/api-build.yml
    branches:
      - master

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          tags: |
            type=sha,prefix={{branch}}-,event=branch,enable={{is_default_branch}}
            type=sha,prefix=temp-{{branch}}-,event=branch,enable=${{ github.ref != format('refs/heads/{0}', 'main') }}
            type=ref,prefix=temp-,suffix=-{{sha}},event=pr
            type=ref,event=tag
      
      - name: Set build version
        run: echo "BUILD_VERSION=${{ steps.meta.outputs.version }}" >> $GITHUB_ENV

      - name: Debug event info
        run: |
          echo "event: ${{ github.event_name }}"
          echo "ref: ${{ github.ref }}"

      - name: Detect merged PR
        id: detect-pr
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const sha = context.sha;
            const prs = await github.rest.repos.listPullRequestsAssociatedWithCommit({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: sha
            });
            if (prs.data.length > 0) {
              const pr = prs.data[0];
              core.setOutput('pr_number', pr.number);
              core.setOutput('pr_title', pr.title);
              console.log(`This commit came from PR #${pr.number}: ${pr.title}`);

              // Check if PR has the label "no-prod-deployment"
              const hasLabel = pr.labels.some(label => label.name === 'no-prod-deployment');
              core.setOutput('deploy_to_prod', !hasLabel);
              console.log(`PR has no-prod-deployment label: ${hasLabel}`);
            } else {
              console.log("This push was a direct commit, not a PR merge.");
              core.setOutput('pr_number', null);
              core.setOutput('pr_title', null);
              core.setOutput('deploy_to_prod', false);
            }
      
      - name: Save PR metadata for CD workflow
        # if: github.event_name == 'pull_request'
        run: |
          mkdir -p ./api-build-metadata
          echo "{\"number\":\"${{ steps.detect-pr.outputs.pr_number }}\", \"version\":\"${{ steps.meta.outputs.version }}\", \"deploy_to_prod\":\"${{ steps.detect-pr.outputs.deploy_to_prod }}\"}" > ./api-build-metadata/api-build-metadata.json
          
      - name: Upload PR metadata
        # if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: api-build-metadata
          path: ./api-build-metadata
